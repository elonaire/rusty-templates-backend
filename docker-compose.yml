version: '3.8'

networks:
  app-tier:
    driver: bridge

services:
  gateway:
    image: nginx:latest
    # container_name: gateway
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
    ports:
      - "80-82:80"
      - "443-445:443" # Uncomment this line if you want to use https
    depends_on:
      - rt-frontend
      - rt-acl
      - rt-files
      - rt-products
    volumes:
      - /etc/ssl/certs:/etc/nginx/certs # Uncomment this line if you want to use https
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx:/var/log/nginx
    networks:
      - app-tier
  rt-frontend:
    image: elonaire/rt-frontend:latest
    pull_policy: always
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
    ports:
      - "8080-8082:8080"
    depends_on:
      - rt-acl
      - rt-products
      - rt-files
    networks:
      - app-tier


  rt-files:
    image: elonaire/rt-files:latest
    pull_policy: always
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
    ports:
      - "3001-3003:3001"
    depends_on:
      - rt-acl
      - rt-files-db
    networks:
      - app-tier
    volumes:
      - ./services/files/database/schemas/schemas.surql:/usr/src/db/schemas.surql
    environment:
      - DATABASE_NAMESPACE=${DATABASE_NAMESPACE}
      - DATABASE_NAME_FILES=${DATABASE_NAME_FILES}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST_FILES=${DATABASE_HOST_FILES}
      - DATABASE_PORT_FILES=${DATABASE_PORT_FILES}
      - OAUTH_SERVICE=${OAUTH_SERVICE}
      - DATABASE_SCHEMA_FILE_PATH=${DATABASE_SCHEMA_FILE_PATH}
      - ALLOWED_SERVICES_CORS=${ALLOWED_SERVICES_CORS}

  rt-products:
    image: elonaire/rt-products:latest
    pull_policy: always
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
    ports:
      - "3004-3006:3004"
    depends_on:
      - rt-acl
      - rt-products-db
    networks:
      - app-tier
    volumes:
      - ./services/products/database/schemas/schemas.surql:/usr/src/db/schemas.surql
    environment:
      - DATABASE_NAMESPACE=${DATABASE_NAMESPACE}
      - DATABASE_NAME_PRODUCTS=${DATABASE_NAME_PRODUCTS}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST_PRODUCTS=${DATABASE_HOST_PRODUCTS}
      - DATABASE_PORT_PRODUCTS=${DATABASE_PORT_PRODUCTS}
      - OAUTH_SERVICE=${OAUTH_SERVICE}
      - DATABASE_SCHEMA_FILE_PATH=${DATABASE_SCHEMA_FILE_PATH}
      - ALLOWED_SERVICES_CORS=${ALLOWED_SERVICES_CORS}

  rt-acl:
    image: elonaire/acl-service:latest
    pull_policy: always
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
    ports:
      - "3007-3009:3007"
    depends_on:
      - rt-acl-db
    networks:
      - app-tier
    volumes:
      - ./services/acl/database/schemas/schemas.surql:/usr/src/db/schemas.surql
    environment:
      - DATABASE_NAMESPACE=${DATABASE_NAMESPACE}
      - DATABASE_NAME_ACL=${DATABASE_NAME_ACL}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST_ACL=${DATABASE_HOST_ACL}
      - DATABASE_PORT_ACL=${DATABASE_PORT_ACL}
      - OAUTH_SERVICE=${OAUTH_SERVICE}
      - DATABASE_SCHEMA_FILE_PATH=${DATABASE_SCHEMA_FILE_PATH}
      - ALLOWED_SERVICES_CORS=${ALLOWED_SERVICES_CORS}

  rt-acl-db:
    image: surrealdb/surrealdb:v1.5.4
    restart: unless-stopped
    ports:
      - 8000:8000
    container_name: rt-acl-db
    networks:
      - app-tier
    user: root
    command: start --log debug --auth --user ${DATABASE_USER} --pass ${DATABASE_PASSWORD} file:/db-data/mydatabase.db
    volumes:
      - rt-acl-db:/db-data
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
  rt-products-db:
    image: surrealdb/surrealdb:v1.5.4
    restart: unless-stopped
    ports:
      - 8001:8001
    container_name: rt-products-db
    networks:
      - app-tier
    user: root
    command: start --log debug --auth --user ${DATABASE_USER} --pass ${DATABASE_PASSWORD} --bind 0.0.0.0:8001 file:/db-data/mydatabase.db
    volumes:
      - rt-products-db:/db-data
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}

  rt-files-db:
    image: surrealdb/surrealdb:v1.5.4
    restart: unless-stopped
    ports:
      - 8002:8002
    container_name: rt-files-db
    networks:
      - app-tier
    user: root
    command: start --log debug --auth --user ${DATABASE_USER} --pass ${DATABASE_PASSWORD} --bind 0.0.0.0:8002 file:/db-data/mydatabase.db
    volumes:
      - rt-files-db:/db-data
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}

volumes:
  rt-products-db:
  rt-acl-db:
  rt-files-db:
